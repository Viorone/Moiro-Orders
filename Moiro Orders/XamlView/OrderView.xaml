<UserControl x:Class="Moiro_Orders.XamlView.OrderView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="MainFont">
            <Setter Property="Control.FontSize" Value="20" />
            <Setter Property="Control.FontFamily" Value="Segoe UI Light"/>
        </Style>
        <Style x:Key="SubFont">
            <Setter Property="Control.FontSize" Value="18"/>
            <Setter Property="Control.Margin" Value="5 0 0 0"/>
        </Style>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="25" Text="*" DockPanel.Dock="Right" />
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe UI" />
        </Style>

        <!-- Анимация открытия окна для Пользователя -->
        <Storyboard x:Key="OrderDetailsOpen" >
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrderDetails" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="OrderDetails" >
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="OrderDetailsClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"  Storyboard.TargetName="OrderDetails">
                <EasingDoubleKeyFrame  KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrderDetails"
                        Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.33" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <!-- Анимация открытия окна для Администратора -->
        <Storyboard x:Key="OrderStatusOpen" >

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrderStatus" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="OrderStatus" >
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <!-- Хорошая анимация на разворачивание правда лагучая  -->
            <!--<DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="OrderStatus"
                                         Duration="0:0:0.3"
                                         From="0" To="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Path=ActualHeight}"/>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Brush.Opacity)" Storyboard.TargetName="fon" >
                <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.3"/>
            </DoubleAnimationUsingKeyFrames>-->
            <!--<DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.Height)" 
                             Storyboard.TargetName="OrderStatus"
                             Duration="0:0:0.2" To="0"/>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Brush.Opacity)" Storyboard.TargetName="fon" >
                <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>-->
        </Storyboard>
        <Storyboard x:Key="OrderStatusClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"  Storyboard.TargetName="OrderStatus">
                <EasingDoubleKeyFrame  KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrderStatus"
                        Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.33" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>

        </Storyboard>
    </UserControl.Resources>

    <!-- Триггеры на события нажатия кнопок -->
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="addOrder">
            <BeginStoryboard Storyboard="{StaticResource OrderDetailsOpen}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="changeOrder">
            <BeginStoryboard Storyboard="{StaticResource OrderDetailsOpen}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="SaveOrder">
            <BeginStoryboard Storyboard="{StaticResource OrderDetailsClose}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="backToOrderList">
            <BeginStoryboard Storyboard="{StaticResource OrderDetailsClose}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="AcceptOrder">
            <BeginStoryboard Storyboard="{StaticResource OrderStatusOpen}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="BackToOrderAdmin">
            <BeginStoryboard Storyboard="{StaticResource OrderStatusClose}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="SaveOrderAdmin">
            <BeginStoryboard Storyboard="{StaticResource OrderStatusClose}" />
        </EventTrigger>
    </UserControl.Triggers>

    <Grid>
        <Grid x:Name="OrdersList" Opacity="1" OpacityMask="Black"   MouseLeftButtonDown="OrdersList_MouseLeftButtonDown">
            <Grid.Background>
                <SolidColorBrush x:Name="fon" Color="White" Opacity="1" />
            </Grid.Background>
            <!-- Верхняя шапка с датой и сортировкой -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Panel.ZIndex="98" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" Margin="30 10 0 0" Grid.Column="0" Visibility="Visible" x:Name="DateSelectOrdersPanel">
                    <TextBlock x:Name="DateText" Text="Выбранная дата:   " Height="auto" FontSize="20" FontFamily="Segoe UI Light" VerticalAlignment="Center"/>
                    <DatePicker x:Name="datePick" Width="180" Height="auto" FontSize="18" FontFamily="Segoe UI Light"  SelectedDateFormat="Long" Background="Indigo" SelectedDateChanged="DatePicker_SelectedDatesChanged" Language="ru" >
                        <DatePicker.Resources>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="MinHeight" Value="35"  />
                                <Setter Property="MinWidth" Value="35" />
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                </StackPanel>
                <materialDesign:Card x:Name="CloseNotConfirmOrders" HorizontalAlignment="Right"  Grid.Column="2" Margin="0 5 190 5"  UniformCornerRadius="10"  Background="#03820f"  Width="50" MouseLeftButtonUp="CloseNotConfirmOrders_MouseLeftButtonUp" Visibility="Collapsed">
                    <ListView >
                        <ListViewItem >
                            <materialDesign:PackIcon Kind="Close" Margin="-4 0 0 0"  Width="30" Height="30" Foreground="White" />
                        </ListViewItem>
                    </ListView>

                </materialDesign:Card>
                <ComboBox x:Name="OrderSortBox" Visibility="Hidden" Grid.Column="1" SelectionChanged="OrderSortBox_SelectionChanged"   FontSize="18" HorizontalAlignment="Right" Margin="0 0 30 0" Background="White" IsEditable="False"  FontFamily="Segoe UI Light" />
                <materialDesign:Card x:Name="NotConfirmBorder" Visibility="Visible" HorizontalAlignment="Right" Grid.Column="1"  UniformCornerRadius="10" Margin="5 5 -15 5"  Background="#e01d1d" MouseLeftButtonUp="NotConfirmBorder_MouseLeftButtonUp" >
                    <ListView>
                        <ListViewItem>
                            <Grid Margin="-5" Width="215" x:Name="CardWidth" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="35"/>
                                    <ColumnDefinition Width="170"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="0" x:Name="CountNotConfirmed" FontSize="22" VerticalAlignment="Center" HorizontalAlignment="Center"  Foreground="AliceBlue"  />
                                <Grid Background="AliceBlue" HorizontalAlignment="Right" Width="1" Margin="0 2" Opacity="0.6" />
                                <TextBlock  Text="Неподтверждённые заявки" Grid.Column="1" TextWrapping="Wrap" HorizontalAlignment="Center"   FontSize="15" VerticalAlignment="Center"  TextAlignment="Center" Foreground="AliceBlue" Margin="0 0 5 0"/>
                            </Grid>
                        </ListViewItem>
                    </ListView>
                </materialDesign:Card>
            </Grid>
            <!-- ListBox содержищий заявки локигу отображения и все что в него засунули -->
            <Grid>
                <Grid.Background>
                    <SolidColorBrush x:Name="fon1" Color="Black" Opacity="0" />
                </Grid.Background>
                <ListBox ScrollViewer.VerticalScrollBarVisibility="Auto" 
                     HorizontalContentAlignment="Stretch"  ScrollViewer.CanContentScroll="False"  Height="auto" 
                     x:Name="listOrders"  SelectionChanged="ListOrders_Selected" Margin="10 55 10 60" Background="Transparent" >
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <ContentPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="BorderThickness" Value="3" />
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                        <Setter Property="CornerRadius" Value="12"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Margin" Value="10 0"/>
                                        <Style.Triggers>
                                            <!-- Тригерры для изменения цвета и выделения выбранного элемента -->
                                            <DataTrigger Binding="{Binding Path=StatusId}"  Value="5">
                                                <Setter Property="Background" Value="#FF5151" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=StatusId}"  Value="3">
                                                <Setter Property="Background" Value="#56A423" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=StatusId}"  Value="4">
                                                <Setter Property="Background" Value="#ff6800" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=StatusId}"  Value="2">
                                                <Setter Property="Background" Value="#68A1DA" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=StatusId}"  Value="1">
                                                <Setter Property="Background" Value="#FFFFaa" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                                 Value="True">
                                                <Setter Property="BorderBrush" Value="#FF3F51B5" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <!-- Шаблон для добавления элементов -->
                                <StackPanel>
                                    <Border CornerRadius="10" Margin="4 4 4 0" Background="White" BorderThickness="3" BorderBrush="LightGray">
                                        <StackPanel>
                                            <Grid Margin="5" Background="White" >
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="1*"/>
                                                    <RowDefinition Height="1*"/>
                                                    <RowDefinition Height="1*"/>
                                                    <RowDefinition Height="1*"/>
                                                    <RowDefinition Height="1*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="1*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <!-- ниже визуально сформировал отображение заявителя с кабинетом и заголовок проблемы у пользователя -->
                                                <Grid  x:Name="userOrder" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="6*" />
                                                        <ColumnDefinition Width="4*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding Path=Problem}" FontSize="24" FontFamily="Calibri"  TextWrapping="Wrap" Grid.Column="0" HorizontalAlignment="Left" x:Name="prob"/>
                                                    <Grid Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="{Binding ElementName=Customer, Path=ActualWidth}"/>
                                                            <ColumnDefinition Width="10*" MinWidth="100"/>
                                                            <ColumnDefinition Width="1*" MinWidth="25"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock x:Name="Customer" Text="Заявитель:  " HorizontalAlignment="Stretch" FontSize="14" >
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding ElementName=UserName, Path=Text}" Value="">
                                                                            <Setter Property="Width" Value="0"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <TextBlock x:Name="UserName" Text="{Binding Path=UserName}" TextWrapping="Wrap" FontStyle="Italic" FontSize="14" Grid.Column="1" HorizontalAlignment="Center" />
                                                        <TextBlock x:Name="Room" Text="{Binding Path=Room}"  FontSize="14" Grid.Column="2"  HorizontalAlignment="Right" />
                                                    </Grid>
                                                </Grid>
                                                <TextBox Text="{Binding Path=Description}" x:Name="DescriptionInOrder" Foreground="{Binding ElementName=prob, Path=Foreground}" HorizontalAlignment="Left" Width="auto" TextWrapping="Wrap" FontSize="18" Grid.Row="1"  Grid.Column="0" Grid.ColumnSpan="2" IsReadOnly="True"  Background="Transparent" BorderThickness="0">
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=DescriptionInOrder, Path=Text}" Value="">
                                                                    <Setter Property="Width" Value="0"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                                <!-- данные по исполнителю конкретной заявки -->
                                                <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3"  HorizontalAlignment="Right" Width="{Binding ElementName=userOrder, Path=ActualWidth}" >
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="6*" />
                                                            <ColumnDefinition Width="4*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid Grid.Column="1">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="{Binding ElementName=owner, Path=ActualWidth}"/>
                                                                <ColumnDefinition Width="1*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock x:Name="owner" Text="Исполнитель:  " FontSize="14" Grid.Column="0"  HorizontalAlignment="Left">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="TextBlock">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding ElementName=AdminName, Path=Text}" Value="">
                                                                                <Setter Property="Width" Value="0"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                            <TextBlock  Grid.Column="1" x:Name="AdminName" Text="{Binding Path=AdminName}"  TextWrapping="Wrap" HorizontalAlignment="Center"  FontSize="14" FontStyle="Italic" />
                                                        </Grid>
                                                    </Grid>
                                                </Grid>
                                                <!-- Динамическое отображение состояния завки и, при необходимости, даты -->
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Row="4" Grid.Column="0">
                                                    <Label Content="Отправлено : " FontSize="14" VerticalAlignment="Center"/>
                                                    <TextBlock Text="{Binding Path=Date, StringFormat='{}{0:f}', ConverterCulture='ru'}" FontSize="14" VerticalAlignment="Center" />
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="4" Grid.Column="1" >
                                                    <TextBlock Text="{Binding Path=StatusName}" FontSize="14" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                                    <Label x:Name="lblDot" Content=": " FontSize="14" VerticalAlignment="Center">
                                                        <Label.Style>
                                                            <Style TargetType="Label">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ElementName=CompletionDate, Path=Text}" Value="">
                                                                        <Setter Property="Width" Value="0"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Label.Style>
                                                    </Label>
                                                    <TextBlock x:Name="CompletionDate" Text="{Binding Path=CompletionDate, StringFormat='{}{0:f}', ConverterCulture='ru'}" FontSize="14" VerticalAlignment="Center">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ElementName=CompletionDate, Path=Text}" Value="">
                                                                        <Setter Property="Width" Value="0" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </StackPanel>
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                    <!-- Комментарий администратора  -->
                                    <Grid Margin="13 0"  Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20"/>
                                            <ColumnDefinition Width="7*"/>
                                            <ColumnDefinition Width="3*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border  Margin="0 0 0 8" BorderThickness="1 0 1 1" BorderBrush="LightGray" Grid.Column="1" CornerRadius="0 0 10 10" Background="LightYellow" Padding="10 0">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ElementName=AdminComment, Path=Text}" Value="">
                                                            <Setter Property="Height" Value="0" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding ElementName=ContentComment, Path=ActualWidth}"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <Label x:Name="ContentComment" Content="// " FontSize="18" VerticalAlignment ="Top" Grid.Column="0" HorizontalAlignment="Left" />
                                                <TextBox x:Name="AdminComment" Text="{Binding Path=AdminComment}" Foreground="{Binding ElementName=prob, Path=Foreground}" IsReadOnly="True" TextWrapping="Wrap" Background="Transparent" BorderThickness="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" FontStyle="Italic" FontSize="18" Grid.Column="1">
                                                    <TextBox.Style>
                                                        <Style TargetType="TextBox"/>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </Grid>
                                        </Border>
                                        <!-- Было бы неплохо перенести кнопки управления в нижнюю часть заявки, ближе к коментариям -->
                                        <!--
                                        <Button x:Name="AcceptBTN" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center"  BorderBrush="{x:Null}" Background="{x:Null}" Visibility="Hidden">
                                            <materialDesign:PackIcon Foreground="White" Kind="DoneOutline"  Width="25" Height="25"/>
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>-->
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <!-- Нижняя панель с отображением кнопок и их логикой -->
            <Grid x:Name="OrdersButtonPanel" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"  Margin="0,0,0,5">
                <StackPanel x:Name="AdminButtons" Orientation="Horizontal"  HorizontalAlignment="Right" IsEnabled="False">
                    <Button x:Name="AcceptOrder"  Content="Принять заявку" IsDefault="True" Margin="20 0"  Foreground="LawnGreen" BorderBrush="{x:Null}" Height="40" Visibility="Hidden" Click="AcceptOrder_Click"/>
                </StackPanel>
                <StackPanel x:Name="UserButtons" Orientation="Horizontal" IsEnabled="True">
                    <Button x:Name="addOrder"  IsDefault="True" Content="Добавить заявку" Height="40" Margin="20 0 0 5"  Foreground="AliceBlue" BorderBrush="{x:Null}" Click="AddOrder_Click"/>
                    <Button x:Name="changeOrder" Content="Изменить заявку" IsDefault="True" Margin="5 0"  Foreground="AliceBlue" BorderBrush="{x:Null}" Height="40"    Visibility="Hidden" Click="ChangeOrder_Click"/>
                    <Button x:Name="DeleteOrder"  Content="Отменить заявку"  Margin="5 0"  Foreground="OrangeRed" BorderBrush="{x:Null}" Height="40"                    Visibility="Hidden" Click="DeleteOrder_Click"/>
                    <Button x:Name="AcceptCompleteOrder" Grid.Row="2" Content="Подтвердить выполнение"  Margin="5 0"  Foreground="LawnGreen" BorderBrush="{x:Null}" Height="40"     Visibility="Hidden" Click="AcceptCompleteOrder_Click"/>
                </StackPanel>
            </Grid>
        </Grid>
        <!-- Блок добавления заявок пользователем -->
        <Grid x:Name="OrderDetails" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsEnabled="True" Visibility="Hidden" Background="White">
            <StackPanel VerticalAlignment="Stretch" x:Name="CreateOrderStack">
                <Border BorderThickness="3" BorderBrush="DimGray" Background="White" CornerRadius="10" Margin="10">
                    <Grid>
                        <StackPanel Margin="10" >
                            <TextBox materialDesign:HintAssist.Hint="Укажите проблему" FontSize="18" FontFamily="Segoe UI Light" Margin="0 25 0 0" x:Name="problem" MaxLength="128"  KeyUp="Problem_KeyUp" />
                            <TextBox materialDesign:HintAssist.Hint="Укажите описание проблемы" Validation.ErrorTemplate="{StaticResource validationTemplate}" MaxLines="10" TextWrapping="Wrap" FontSize="18" FontFamily="Segoe UI Light" Margin="0 25 0 20" x:Name="description" MaxLength="300" KeyDown="Description_KeyDown"/>
                            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center" Orientation="Horizontal">
                                <Button Content="Назад" x:Name="backToOrderList" IsCancel="True" Height="40" Margin="10" Click="BackToOrderList_Click" Width="{Binding ElementName=SaveOrder, Path=ActualWidth}" FontSize="16"/>
                                <Button Content="Отправить" x:Name="SaveOrder"  Margin="10" Height="40" Click="SaveOrder_Click" FontSize="16" IsEnabled="False"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>
            </StackPanel>
        </Grid>
        <!-- Блок редактирования заявок Администратором -->
        <StackPanel x:Name="OrderStatus"   VerticalAlignment="Stretch" IsEnabled="False" Visibility="Collapsed" >
            <StackPanel.Background>
                <SolidColorBrush Color="Transparent" Opacity="0.3" />
            </StackPanel.Background>

            <StackPanel>
                <Border BorderThickness="3" BorderBrush="Black" Background="White" CornerRadius="10" Margin="10">
                    <ScrollViewer MaxHeight="{Binding ElementName=OrdersList, Path=ActualHeight}">
                    <Grid x:Name="GridForAdmin">
                        <StackPanel Margin="10" >
                            <Label Content="Проблема"           Style="{StaticResource MainFont}" />
                            <TextBlock x:Name="ProblemView" Style="{StaticResource SubFont}" />
                            <Label Content="Описание"           Style="{StaticResource MainFont}"/>
                            <TextBlock x:Name="DescriptionView" Style="{StaticResource SubFont}"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0">
                                    <Label Content="Дата отправки"           Style="{StaticResource MainFont}"/>
                                    <TextBlock x:Name="DateView"             Style="{StaticResource SubFont}"/>
                                    <Label Content="Полное имя пользователя" Style="{StaticResource MainFont}"/>
                                    <TextBlock x:Name="UserNameView"         Style="{StaticResource SubFont}"/>
                                </StackPanel>
                                <StackPanel Grid.Column="1">
                                    <Label Content="Логин пользователя"      Style="{StaticResource MainFont}"/>
                                    <TextBlock x:Name="LoginView"            Style="{StaticResource SubFont}"/>
                                    <Label Content="Кабинет"                 Style="{StaticResource MainFont}"/>
                                    <TextBlock x:Name="RoomView"             Style="{StaticResource SubFont}"/>
                                </StackPanel>
                            </Grid>
                            <TextBox materialDesign:HintAssist.Hint="Комментарий к заявке"  Validation.ErrorTemplate="{StaticResource validationTemplate}" TextWrapping="Wrap" FontSize="18" FontFamily="Segoe UI Light" Margin="0 25 0 0" x:Name="AdminDescription" MaxLength="300" MaxLines="10" KeyDown="AdminDescription_KeyDown" />
                            <ComboBox x:Name="StatusList" materialDesign:HintAssist.Hint="Укажите статус" FontSize ="20" Margin="0 25 0 10" FontFamily="Segoe UI Light"/>
                            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center" Orientation="Horizontal">
                                <Button Content="Назад" x:Name="BackToOrderAdmin" Height="40" IsCancel="True" Margin="10" Click="BackToOrderAdmin_Click"/>
                                <Button Content="Сохранить" x:Name="SaveOrderAdmin" IsDefault="True" Margin="10"  Height="40" Click="SaveOrderAdmin_Click"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    </ScrollViewer>
                </Border>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
  
